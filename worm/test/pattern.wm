@worm
def f(a: int) -> float:
    if a - 1 is 1:
        return .5
    elif _ is 2:  # _ is implicitly a - 1
        return 1.75
    elif _ is 3 * n:  # n get bound to (a - 1) / 3
        return n
    else:
        return 7.5 * a

# valid patterns:
# - constants
# - binding (catch all)
# - binop with one constant branch (/ * + - %)
# - Sum type with binding or constant (ex: Result.ok(val), Result.error(err))
# - struct constructors with bindings or constants
